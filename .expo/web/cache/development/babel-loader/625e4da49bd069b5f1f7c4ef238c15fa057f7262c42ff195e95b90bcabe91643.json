{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Feather } from '@expo/vector-icons';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    passwordVisible = _useState2[0],\n    setPasswordVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loginStatus = _useState8[0],\n    setLoginStatus = _useState8[1];\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    setPasswordVisible(!passwordVisible);\n  };\n  var toggleModalSucess = function toggleModalSucess() {\n    setModalVisible(!modalVisible);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('sua_url_de_login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: 'seu_email',\n            senha: password\n          })\n        });\n        var status = response.status;\n        if (status === 200 || status === 201) {\n          setLoginStatus('success');\n        } else {\n          setLoginStatus('failed');\n        }\n      } catch (error) {\n        console.error('Erro na requisição:', error);\n        setLoginStatus('failed');\n      } finally {\n        setModalVisible(true);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.inputLabel,\n        children: \"E-mail\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Digite seu e-mail\"\n      }), _jsx(Text, {\n        style: styles.inputLabel,\n        children: \"Senha\"\n      }), _jsxs(View, {\n        style: styles.passwordInputContainer,\n        children: [_jsx(TextInput, {\n          style: styles.passwordInput,\n          placeholder: \"Digite sua senha\",\n          secureTextEntry: !passwordVisible,\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: togglePasswordVisibility,\n          style: styles.passwordIconContainer,\n          children: _jsx(Feather, {\n            name: passwordVisible ? 'eye-off' : 'eye',\n            size: 24,\n            color: \"gray\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Login\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.signupContainer,\n      children: [_jsx(Text, {\n        style: styles.signupText,\n        children: \"N\\xE3o tem uma conta?\"\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.signupLinkText,\n          children: \"Fa\\xE7a agora\"\n        })\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert('Modal has been closed.');\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [loginStatus === 'success' ? _jsx(Text, {\n            children: \"Login realizado com sucesso!\"\n          }) : _jsx(Text, {\n            children: \"Login falhou. Tente novamente.\"\n          }), _jsx(TouchableOpacity, {\n            onPress: toggleModalSucess,\n            children: _jsx(Text, {\n              children: \"Fechar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Modal","Alert","Feather","styles","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","passwordVisible","setPasswordVisible","_useState3","_useState4","password","setPassword","_useState5","_useState6","modalVisible","setModalVisible","_useState7","_useState8","loginStatus","setLoginStatus","togglePasswordVisibility","toggleModalSucess","handleLogin","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","email","senha","status","error","console","apply","arguments","style","container","children","title","form","inputLabel","input","placeholder","passwordInputContainer","passwordInput","secureTextEntry","value","onChangeText","text","onPress","passwordIconContainer","name","size","color","loginButton","loginButtonText","signupContainer","signupText","signupLinkText","animationType","transparent","visible","onRequestClose","alert","modalContainer","modalContent"],"sources":["C:/Users/thaliss/Desktop/IndicaMais-app/src/pages/LoginScreen/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Modal, Alert } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport styles from \"./styles\";\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [loginStatus, setLoginStatus] = useState(null); // Status da requisição\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  const toggleModalSucess = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('sua_url_de_login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: 'seu_email',\r\n          senha: password,\r\n        }),\r\n      });\r\n\r\n      const status = response.status;\r\n\r\n      if (status === 200 || status === 201) {\r\n        // Login com sucesso\r\n        setLoginStatus('success');\r\n      } else {\r\n        // Login falhou\r\n        setLoginStatus('failed');\r\n      }\r\n    } catch (error) {\r\n      // Ocorreu um erro na requisição\r\n      console.error('Erro na requisição:', error);\r\n      setLoginStatus('failed');\r\n    } finally {\r\n      setModalVisible(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n      <View style={styles.form}>\r\n        <Text style={styles.inputLabel}>E-mail</Text>\r\n        <TextInput style={styles.input} placeholder=\"Digite seu e-mail\" />\r\n\r\n        <Text style={styles.inputLabel}>Senha</Text>\r\n        <View style={styles.passwordInputContainer}>\r\n          <TextInput\r\n            style={styles.passwordInput}\r\n            placeholder=\"Digite sua senha\"\r\n            secureTextEntry={!passwordVisible}\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n          />\r\n          <TouchableOpacity onPress={togglePasswordVisibility} style={styles.passwordIconContainer}>\r\n            <Feather name={passwordVisible ? 'eye-off' : 'eye'} size={24} color=\"gray\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n          <Text style={styles.loginButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.signupContainer}>\r\n        <Text style={styles.signupText}>Não tem uma conta?</Text>\r\n        <TouchableOpacity>\r\n          <Text style={styles.signupLinkText}>Faça agora</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.');\r\n          setModalVisible(!modalVisible);\r\n        }}>\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            {loginStatus === 'success' ? (\r\n              <Text>Login realizado com sucesso!</Text>\r\n            ) : (\r\n              <Text>Login falhou. Tente novamente.</Text>\r\n            )}\r\n            <TouchableOpacity onPress={toggleModalSucess}>\r\n              <Text>Fechar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,KAAA;AAExC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9B,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9C,IAAAC,SAAA,GAA8CjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAAI,UAAA,GAAgCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwC1B,QAAQ,CAAC,KAAK,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAsC9B,QAAQ,CAAC,IAAI,CAAC;IAAA+B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA7CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrCb,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,IAAMe,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9BN,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,IAAMQ,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,kBAAkB,EAAE;UAC/CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAE,WAAW;YAClBC,KAAK,EAAEvB;UACT,CAAC;QACH,CAAC,CAAC;QAEF,IAAMwB,MAAM,GAAGT,QAAQ,CAACS,MAAM;QAE9B,IAAIA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;UAEpCf,cAAc,CAAC,SAAS,CAAC;QAC3B,CAAC,MAAM;UAELA,cAAc,CAAC,QAAQ,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;QAEdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3ChB,cAAc,CAAC,QAAQ,CAAC;MAC1B,CAAC,SAAS;QACRJ,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;IAAA,gBA7BKO,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6BhB;EAED,OACEvC,KAAA,CAACZ,IAAI;IAACoD,KAAK,EAAE5C,MAAM,CAAC6C,SAAU;IAAAC,QAAA,GAC5B5C,IAAA,CAACT,IAAI;MAACmD,KAAK,EAAE5C,MAAM,CAAC+C,KAAM;MAAAD,QAAA,EAAC;IAAK,CAAM,CAAC,EACvC1C,KAAA,CAACZ,IAAI;MAACoD,KAAK,EAAE5C,MAAM,CAACgD,IAAK;MAAAF,QAAA,GACvB5C,IAAA,CAACT,IAAI;QAACmD,KAAK,EAAE5C,MAAM,CAACiD,UAAW;QAAAH,QAAA,EAAC;MAAM,CAAM,CAAC,EAC7C5C,IAAA,CAACR,SAAS;QAACkD,KAAK,EAAE5C,MAAM,CAACkD,KAAM;QAACC,WAAW,EAAC;MAAmB,CAAE,CAAC,EAElEjD,IAAA,CAACT,IAAI;QAACmD,KAAK,EAAE5C,MAAM,CAACiD,UAAW;QAAAH,QAAA,EAAC;MAAK,CAAM,CAAC,EAC5C1C,KAAA,CAACZ,IAAI;QAACoD,KAAK,EAAE5C,MAAM,CAACoD,sBAAuB;QAAAN,QAAA,GACzC5C,IAAA,CAACR,SAAS;UACRkD,KAAK,EAAE5C,MAAM,CAACqD,aAAc;UAC5BF,WAAW,EAAC,kBAAkB;UAC9BG,eAAe,EAAE,CAAC3C,eAAgB;UAClC4C,KAAK,EAAExC,QAAS;UAChByC,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKzC,WAAW,CAACyC,IAAI,CAAC;UAAA;QAAC,CAC3C,CAAC,EACFvD,IAAA,CAACP,gBAAgB;UAAC+D,OAAO,EAAEjC,wBAAyB;UAACmB,KAAK,EAAE5C,MAAM,CAAC2D,qBAAsB;UAAAb,QAAA,EACvF5C,IAAA,CAACH,OAAO;YAAC6D,IAAI,EAAEjD,eAAe,GAAG,SAAS,GAAG,KAAM;YAACkD,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAM,CAAE;QAAC,CAC7D,CAAC;MAAA,CACf,CAAC,EAEP5D,IAAA,CAACP,gBAAgB;QAACiD,KAAK,EAAE5C,MAAM,CAAC+D,WAAY;QAACL,OAAO,EAAE/B,WAAY;QAAAmB,QAAA,EAChE5C,IAAA,CAACT,IAAI;UAACmD,KAAK,EAAE5C,MAAM,CAACgE,eAAgB;UAAAlB,QAAA,EAAC;QAAK,CAAM;MAAC,CACjC,CAAC;IAAA,CACf,CAAC,EAEP1C,KAAA,CAACZ,IAAI;MAACoD,KAAK,EAAE5C,MAAM,CAACiE,eAAgB;MAAAnB,QAAA,GAClC5C,IAAA,CAACT,IAAI;QAACmD,KAAK,EAAE5C,MAAM,CAACkE,UAAW;QAAApB,QAAA,EAAC;MAAkB,CAAM,CAAC,EACzD5C,IAAA,CAACP,gBAAgB;QAAAmD,QAAA,EACf5C,IAAA,CAACT,IAAI;UAACmD,KAAK,EAAE5C,MAAM,CAACmE,cAAe;UAAArB,QAAA,EAAC;QAAU,CAAM;MAAC,CACrC,CAAC;IAAA,CACf,CAAC,EAGP5C,IAAA,CAACL,KAAK;MACJuE,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAEnD,YAAa;MACtBoD,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBzE,KAAK,CAAC0E,KAAK,CAAC,wBAAwB,CAAC;QACrCpD,eAAe,CAAC,CAACD,YAAY,CAAC;MAChC,CAAE;MAAA2B,QAAA,EACF5C,IAAA,CAACV,IAAI;QAACoD,KAAK,EAAE5C,MAAM,CAACyE,cAAe;QAAA3B,QAAA,EACjC1C,KAAA,CAACZ,IAAI;UAACoD,KAAK,EAAE5C,MAAM,CAAC0E,YAAa;UAAA5B,QAAA,GAC9BvB,WAAW,KAAK,SAAS,GACxBrB,IAAA,CAACT,IAAI;YAAAqD,QAAA,EAAC;UAA4B,CAAM,CAAC,GAEzC5C,IAAA,CAACT,IAAI;YAAAqD,QAAA,EAAC;UAA8B,CAAM,CAC3C,EACD5C,IAAA,CAACP,gBAAgB;YAAC+D,OAAO,EAAEhC,iBAAkB;YAAAoB,QAAA,EAC3C5C,IAAA,CAACT,IAAI;cAAAqD,QAAA,EAAC;YAAM,CAAM;UAAC,CACH,CAAC;QAAA,CACf;MAAC,CACH;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}